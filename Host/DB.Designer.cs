//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Host
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class SSHMC01Entities1 : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'SSHMC01Entities1' 區段中找到的連接字串，初始化新的 SSHMC01Entities1 物件。
        /// </summary>
        public SSHMC01Entities1() : base("name=SSHMC01Entities1", "SSHMC01Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SSHMC01Entities1 物件。
        /// </summary>
        public SSHMC01Entities1(string connectionString) : base(connectionString, "SSHMC01Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SSHMC01Entities1 物件。
        /// </summary>
        public SSHMC01Entities1(EntityConnection connection) : base(connection, "SSHMC01Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<VWHOSTMFCC> VWHOSTMFCC
        {
            get
            {
                if ((_VWHOSTMFCC == null))
                {
                    _VWHOSTMFCC = base.CreateObjectSet<VWHOSTMFCC>("VWHOSTMFCC");
                }
                return _VWHOSTMFCC;
            }
        }
        private ObjectSet<VWHOSTMFCC> _VWHOSTMFCC;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<vwSensorDegree> vwSensorDegree
        {
            get
            {
                if ((_vwSensorDegree == null))
                {
                    _vwSensorDegree = base.CreateObjectSet<vwSensorDegree>("vwSensorDegree");
                }
                return _vwSensorDegree;
            }
        }
        private ObjectSet<vwSensorDegree> _vwSensorDegree;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 VWHOSTMFCC EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToVWHOSTMFCC(VWHOSTMFCC vWHOSTMFCC)
        {
            base.AddObject("VWHOSTMFCC", vWHOSTMFCC);
        }
    
        /// <summary>
        /// 將新物件加入 vwSensorDegree EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddTovwSensorDegree(vwSensorDegree vwSensorDegree)
        {
            base.AddObject("vwSensorDegree", vwSensorDegree);
        }

        #endregion
    }
    

    #endregion
    
    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DB", Name="VWHOSTMFCC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VWHOSTMFCC : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 VWHOSTMFCC 物件。
        /// </summary>
        /// <param name="hOST_ID">HOST_ID 屬性的初始值。</param>
        /// <param name="mFCC_ID">MFCC_ID 屬性的初始值。</param>
        /// <param name="rEMOTE_PORT">REMOTE_PORT 屬性的初始值。</param>
        public static VWHOSTMFCC CreateVWHOSTMFCC(global::System.String hOST_ID, global::System.String mFCC_ID, global::System.Int32 rEMOTE_PORT)
        {
            VWHOSTMFCC vWHOSTMFCC = new VWHOSTMFCC();
            vWHOSTMFCC.HOST_ID = hOST_ID;
            vWHOSTMFCC.MFCC_ID = mFCC_ID;
            vWHOSTMFCC.REMOTE_PORT = rEMOTE_PORT;
            return vWHOSTMFCC;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HOST_ID
        {
            get
            {
                return _HOST_ID;
            }
            set
            {
                if (_HOST_ID != value)
                {
                    OnHOST_IDChanging(value);
                    ReportPropertyChanging("HOST_ID");
                    _HOST_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HOST_ID");
                    OnHOST_IDChanged();
                }
            }
        }
        private global::System.String _HOST_ID;
        partial void OnHOST_IDChanging(global::System.String value);
        partial void OnHOST_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HOST_TYPE
        {
            get
            {
                return _HOST_TYPE;
            }
            set
            {
                OnHOST_TYPEChanging(value);
                ReportPropertyChanging("HOST_TYPE");
                _HOST_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HOST_TYPE");
                OnHOST_TYPEChanged();
            }
        }
        private global::System.String _HOST_TYPE;
        partial void OnHOST_TYPEChanging(global::System.String value);
        partial void OnHOST_TYPEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MEMO
        {
            get
            {
                return _MEMO;
            }
            set
            {
                OnMEMOChanging(value);
                ReportPropertyChanging("MEMO");
                _MEMO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MEMO");
                OnMEMOChanged();
            }
        }
        private global::System.String _MEMO;
        partial void OnMEMOChanging(global::System.String value);
        partial void OnMEMOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MFCC_ID
        {
            get
            {
                return _MFCC_ID;
            }
            set
            {
                if (_MFCC_ID != value)
                {
                    OnMFCC_IDChanging(value);
                    ReportPropertyChanging("MFCC_ID");
                    _MFCC_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MFCC_ID");
                    OnMFCC_IDChanged();
                }
            }
        }
        private global::System.String _MFCC_ID;
        partial void OnMFCC_IDChanging(global::System.String value);
        partial void OnMFCC_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MFCC_TYPE
        {
            get
            {
                return _MFCC_TYPE;
            }
            set
            {
                OnMFCC_TYPEChanging(value);
                ReportPropertyChanging("MFCC_TYPE");
                _MFCC_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MFCC_TYPE");
                OnMFCC_TYPEChanged();
            }
        }
        private global::System.String _MFCC_TYPE;
        partial void OnMFCC_TYPEChanging(global::System.String value);
        partial void OnMFCC_TYPEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 REMOTE_PORT
        {
            get
            {
                return _REMOTE_PORT;
            }
            set
            {
                if (_REMOTE_PORT != value)
                {
                    OnREMOTE_PORTChanging(value);
                    ReportPropertyChanging("REMOTE_PORT");
                    _REMOTE_PORT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REMOTE_PORT");
                    OnREMOTE_PORTChanged();
                }
            }
        }
        private global::System.Int32 _REMOTE_PORT;
        partial void OnREMOTE_PORTChanging(global::System.Int32 value);
        partial void OnREMOTE_PORTChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DB", Name="vwSensorDegree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwSensorDegree : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 vwSensorDegree 物件。
        /// </summary>
        /// <param name="sITE_ID">SITE_ID 屬性的初始值。</param>
        /// <param name="sENSOR_ID">SENSOR_ID 屬性的初始值。</param>
        /// <param name="iSCONNECTED">ISCONNECTED 屬性的初始值。</param>
        /// <param name="iSVALID">ISVALID 屬性的初始值。</param>
        /// <param name="mFCC_ID">MFCC_ID 屬性的初始值。</param>
        public static vwSensorDegree CreatevwSensorDegree(global::System.String sITE_ID, global::System.Int32 sENSOR_ID, global::System.String iSCONNECTED, global::System.String iSVALID, global::System.String mFCC_ID)
        {
            vwSensorDegree vwSensorDegree = new vwSensorDegree();
            vwSensorDegree.SITE_ID = sITE_ID;
            vwSensorDegree.SENSOR_ID = sENSOR_ID;
            vwSensorDegree.ISCONNECTED = iSCONNECTED;
            vwSensorDegree.ISVALID = iSVALID;
            vwSensorDegree.MFCC_ID = mFCC_ID;
            return vwSensorDegree;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SITE_ID
        {
            get
            {
                return _SITE_ID;
            }
            set
            {
                if (_SITE_ID != value)
                {
                    OnSITE_IDChanging(value);
                    ReportPropertyChanging("SITE_ID");
                    _SITE_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SITE_ID");
                    OnSITE_IDChanged();
                }
            }
        }
        private global::System.String _SITE_ID;
        partial void OnSITE_IDChanging(global::System.String value);
        partial void OnSITE_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SENSOR_ID
        {
            get
            {
                return _SENSOR_ID;
            }
            set
            {
                if (_SENSOR_ID != value)
                {
                    OnSENSOR_IDChanging(value);
                    ReportPropertyChanging("SENSOR_ID");
                    _SENSOR_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SENSOR_ID");
                    OnSENSOR_IDChanged();
                }
            }
        }
        private global::System.Int32 _SENSOR_ID;
        partial void OnSENSOR_IDChanging(global::System.Int32 value);
        partial void OnSENSOR_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SENSOR_NAME
        {
            get
            {
                return _SENSOR_NAME;
            }
            set
            {
                OnSENSOR_NAMEChanging(value);
                ReportPropertyChanging("SENSOR_NAME");
                _SENSOR_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SENSOR_NAME");
                OnSENSOR_NAMEChanged();
            }
        }
        private global::System.String _SENSOR_NAME;
        partial void OnSENSOR_NAMEChanging(global::System.String value);
        partial void OnSENSOR_NAMEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private Nullable<global::System.Double> _X;
        partial void OnXChanging(Nullable<global::System.Double> value);
        partial void OnXChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private Nullable<global::System.Double> _Y;
        partial void OnYChanging(Nullable<global::System.Double> value);
        partial void OnYChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISCONNECTED
        {
            get
            {
                return _ISCONNECTED;
            }
            set
            {
                if (_ISCONNECTED != value)
                {
                    OnISCONNECTEDChanging(value);
                    ReportPropertyChanging("ISCONNECTED");
                    _ISCONNECTED = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISCONNECTED");
                    OnISCONNECTEDChanged();
                }
            }
        }
        private global::System.String _ISCONNECTED;
        partial void OnISCONNECTEDChanging(global::System.String value);
        partial void OnISCONNECTEDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ID;
        partial void OnIDChanging(Nullable<global::System.Int32> value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EXCUTION_MODE
        {
            get
            {
                return _EXCUTION_MODE;
            }
            set
            {
                OnEXCUTION_MODEChanging(value);
                ReportPropertyChanging("EXCUTION_MODE");
                _EXCUTION_MODE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXCUTION_MODE");
                OnEXCUTION_MODEChanged();
            }
        }
        private Nullable<global::System.Boolean> _EXCUTION_MODE;
        partial void OnEXCUTION_MODEChanging(Nullable<global::System.Boolean> value);
        partial void OnEXCUTION_MODEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SENSOR_TYPE
        {
            get
            {
                return _SENSOR_TYPE;
            }
            set
            {
                OnSENSOR_TYPEChanging(value);
                ReportPropertyChanging("SENSOR_TYPE");
                _SENSOR_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SENSOR_TYPE");
                OnSENSOR_TYPEChanged();
            }
        }
        private global::System.String _SENSOR_TYPE;
        partial void OnSENSOR_TYPEChanging(global::System.String value);
        partial void OnSENSOR_TYPEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CURRENT_DEGREE
        {
            get
            {
                return _CURRENT_DEGREE;
            }
            set
            {
                OnCURRENT_DEGREEChanging(value);
                ReportPropertyChanging("CURRENT_DEGREE");
                _CURRENT_DEGREE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENT_DEGREE");
                OnCURRENT_DEGREEChanged();
            }
        }
        private Nullable<global::System.Int32> _CURRENT_DEGREE;
        partial void OnCURRENT_DEGREEChanging(Nullable<global::System.Int32> value);
        partial void OnCURRENT_DEGREEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VALUE0
        {
            get
            {
                return _VALUE0;
            }
            set
            {
                OnVALUE0Changing(value);
                ReportPropertyChanging("VALUE0");
                _VALUE0 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE0");
                OnVALUE0Changed();
            }
        }
        private Nullable<global::System.Double> _VALUE0;
        partial void OnVALUE0Changing(Nullable<global::System.Double> value);
        partial void OnVALUE0Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VALUE1
        {
            get
            {
                return _VALUE1;
            }
            set
            {
                OnVALUE1Changing(value);
                ReportPropertyChanging("VALUE1");
                _VALUE1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE1");
                OnVALUE1Changed();
            }
        }
        private Nullable<global::System.Double> _VALUE1;
        partial void OnVALUE1Changing(Nullable<global::System.Double> value);
        partial void OnVALUE1Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VALUE2
        {
            get
            {
                return _VALUE2;
            }
            set
            {
                OnVALUE2Changing(value);
                ReportPropertyChanging("VALUE2");
                _VALUE2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE2");
                OnVALUE2Changed();
            }
        }
        private Nullable<global::System.Double> _VALUE2;
        partial void OnVALUE2Changing(Nullable<global::System.Double> value);
        partial void OnVALUE2Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISVALID
        {
            get
            {
                return _ISVALID;
            }
            set
            {
                if (_ISVALID != value)
                {
                    OnISVALIDChanging(value);
                    ReportPropertyChanging("ISVALID");
                    _ISVALID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISVALID");
                    OnISVALIDChanged();
                }
            }
        }
        private global::System.String _ISVALID;
        partial void OnISVALIDChanging(global::System.String value);
        partial void OnISVALIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MFCC_ID
        {
            get
            {
                return _MFCC_ID;
            }
            set
            {
                if (_MFCC_ID != value)
                {
                    OnMFCC_IDChanging(value);
                    ReportPropertyChanging("MFCC_ID");
                    _MFCC_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MFCC_ID");
                    OnMFCC_IDChanged();
                }
            }
        }
        private global::System.String _MFCC_ID;
        partial void OnMFCC_IDChanging(global::System.String value);
        partial void OnMFCC_IDChanged();

        #endregion
    
    }

    #endregion
    
}
